

COMP-137 Final Project TO DO LIST


GOAL: Use data from inertia map of human hand moving through space to estimate human pose
		
	(human is standing in one place to start)


---------------General Research------------------

Get stats on human muscle strength

	inertia vs muscle force

Fitts' law -> emperical law about how long it takes to move your hand between two points in space
	
	linear tradeoff between distance and accuracy

		2x distance at 0.5 accuracy can be done in equal time

---------------Simulation------------------------

Get world frame angles of endpoint!!!

	Debug 1M dataset

SEQUENTIAL POSES (movement history)
	Data required:
		[joint angles, inerita tensor]
		OR
		[2d array of inertia tensors, joint angles of final position]
			do I just save joint angles of last position?
		OR
		[[[inertia tensor], [dist to next point]],final joint angles]

	need information on spatial relationship between sequential points in xyz space (ex: second point was +2x, -1y, +0.1z)
		how do I standardize this
			should all be relative to last point in sequence

	how to choose poses for sequential points?
		random endpoint forces vs constant angular displacement vs constant cartesian displacement
			using positions after random endpoint forces would be more consistant with actual data 
			(since movement would  be representative of dynamics of the human arm)

			constant cartesian displacement would make it easy to use on new data??

	inertia tensors must be determiend at each position

	Proposed Workflow:
		Set joints to some initial position
		Exert random endpoint force on arm
		Record trajectory of joints as a result of the external force
		Save some number of joint positions from this trajectory (start, ..., end)
		loop though these positions, calculating inertial tensor at each? <- DO I EVEN NEED INERTIAL TENSORS???

Compile assets in .stp format (currently in Inventor ipt)

Ignore data points from singularity poses

Figure out how to randomize params to make different humans
	
Generate data on different humans	

	Key human properties: 	Height
							Weight
							Flexibiity
							Strength

Take input from human joint torques?



---------------Data Generation-------------------

Write Matlab Script for ellipse generation for current human

Optimize generation for scalability

Generate lots of training/ test/ validation data

---------------Data Pre-Processing---------------

Convert ellipse data from matalb to tensorflow
	matlab -> numpy via scipy.io.loadmat() -> TensorFlow

label data


---------------Network Design--------------------

Fix exploding gradients

	grading clipping for 1M dataset?

	Batch normalization can cause exploding gradients
		https://kyleluther.github.io/2020/02/18/batchnorm-exploding-gradients.html

Weigh j0 j1 j2 less heavily than the rest of the joints

Loss function
	
	Scale last layer of network to match joint ranges before or after end of function
		do I want scaled output layer to be accounted for in backprop?

	____ (I'm forgetting something)

1D vs 3D CNN?

	1D for time series data

Tensorboard

Loss function - try linear loss!!!

---------------Hyperparameter Optimization-------

Tensorboard

Optuna(?)


--------------Make sense of data-----------------

Given trajectory find pose of human INCLUDING ROTATION OF HIPS RELATIVE TO ENDPOINT

	Need some form of filer (Kalman??)

--------------Visualization----------------------

OpenGL again

	Steal code from HIPPOPOTAMOUS AND DEEP RL PROJECTS

	Add ground plane



--------------DOCUMENTATION----------------------

More screenshots/ screen recordings

References


~~~~~~~~~~~~Questions~~~~~~~~~~~~~~~~~~~~~~~~~~~

Are there any disadvantages to having residual connections in a network?

	All they do is make layers trend towards identity rather than trend towards zero, right?

Network splits halfway through?

Better to use rand() over randn() ->batch normalization??